<project default="main">

	<loadproperties srcFile="buildProduct.properties"/>

	<target name="main">

		<!-- Check for base target platform co-located with eclipse -->
		<property name="baseLocation" location="${base}/eclipse"/>
		<available property="haveBase" file="${baseLocation}"/>
		<fail unless="haveBase" message="The base of the target platform is required to build this product.  Please edit buildProduct.xml or set the &quot;base&quot; property or check ${base}" />

		<!-- Check for deltapack co-located with eclipse -->
		<available property="haveDeltaPack" file="${deltapack}"/>
		<fail unless="haveDeltaPack" message="The deltapack is required to build this product.  Please edit buildProduct.xml or set the &quot;deltapack&quot; property." />

		<!-- Check that we have a miscTargetPlatform -->
		<available property="haveMiscTargetPlatform" file="${miscTargetPlatform}"/>
		<fail unless="haveMiscTargetPlatform" message="The misc target platform is required to build this product.  Please edit buildProduct.xml or set the &quot;miscTargetPlatform&quot; property." />

		<property name="builder" value="${basedir}" />
		<property name="buildDirectory" value="${basedir}/buildDirectory"/>

		<!--property name="pluginPath" value="${basedir}/..${path.separator}${deltapack}${path.separator}${miscTargetPlatform}" /-->
		<property name="pluginPath" value="${basedir}/.." />

		<property name="buildTempFolder" value="${buildDirectory}" />

		<ant antfile="${eclipse.pdebuild.scripts}/productBuild/productBuild.xml" />


		<!-- refresh the workspace -->
		<eclipse.convertPath fileSystemPath="${basedir}" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>


	<!-- ================================= 
          target: s3cmd.sync 
            parms            
          	s3cmd.exec 
          	s3.bucket.location
          	local.dir.to.sync
          	s3.bucket
          ================================= -->
	<target name="s3cmd.sync"  description="Syncs a directory with S3">
		<!-- copy products to syncing dir -->
		<!-- Check that we have a downloads.dir.for.syncing -->
		<available property="haveSyncDir" file="${downloads.dir.for.syncing}"/>
		<fail unless="haveSyncDir" message="The synchronizing directory location is required to build this product.  Please edit buildProduct.xml or set the &quot;downloads.dir.for.syncing&quot; property or check ${downloads.dir.for.syncing}." />
		<property name="product.dir" location="${basedir}/products"/>
		<copy todir="${downloads.dir.for.syncing}" overwrite="false">
			<fileset dir="${product.dir}">
				<include name="*.zip"/>
				<include name="*.tar"/>
			</fileset>
		</copy>

		<!-- sync product repo to syncing dir location -->
		<property name="product.repo.dir" location="${basedir}/repository"/>
		<sync todir="${product.repo.dir.for.syncing}">
		  <fileset dir="${product.repo.dir}"/>
		</sync>


		<!-- sync features repo to syncing dir location -->
		<!-- Check that we have a features.repo.dir -->
		<property name="updatesite.project" value="com.verticon.tracker.updatesite"/>

		<property name="features.repo.dir" location="${basedir}/../${updatesite.project}"/>			
		<available property="haveFeaturesSyncDir" file="${features.repo.dir}"/>
		<fail unless="haveFeaturesSyncDir" message="The Features Repository directory location is required to build this product.  Please edit buildProduct.xml or set the &quot;features.repo.dir&quot; property or check ${features.repo.dir}." />

		<!-- sync features repo to syncing dir -->	
		<sync todir="${features.repo.dir.for.syncing}">
				  <fileset dir="${features.repo.dir}">
				  	<exclude name=".project"/>
				  </fileset>
		</sync>
		
		<exec executable="${s3cmd.exec}" failonerror="false" timeout="9000000">
			<arg line="sync" />
			<arg line="-v" />
			<arg line="--acl-public" />
			<arg line="--guess-mime-type" />
			<arg line="--bucket-location=${s3.bucket.location}" />
			<arg line="--delete-removed" />
			<arg line="${local.dir.to.sync}" />
			<arg line="${s3.bucket}" />
		</exec>
		
	</target>
</project>