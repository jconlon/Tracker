/*
* generated by Xtext
*/
grammar InternalMongoQuery;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.json.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.json.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.json.services.MongoQueryGrammarAccess;

}

@parser::members {
 
 	private MongoQueryGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MongoQueryGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSelector
entryRuleSelector 
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectorAccess().getGroup()); }
(rule__Selector__Group__0)
{ after(grammarAccess.getSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelection
entryRuleSelection 
:
{ before(grammarAccess.getSelectionRule()); }
	 ruleSelection
{ after(grammarAccess.getSelectionRule()); } 
	 EOF 
;

// Rule Selection
ruleSelection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectionAccess().getGroup()); }
(rule__Selection__Group__0)
{ after(grammarAccess.getSelectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldSelection
entryRuleFieldSelection 
:
{ before(grammarAccess.getFieldSelectionRule()); }
	 ruleFieldSelection
{ after(grammarAccess.getFieldSelectionRule()); } 
	 EOF 
;

// Rule FieldSelection
ruleFieldSelection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldSelectionAccess().getGroup()); }
(rule__FieldSelection__Group__0)
{ after(grammarAccess.getFieldSelectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQueryObject
entryRuleQueryObject 
:
{ before(grammarAccess.getQueryObjectRule()); }
	 ruleQueryObject
{ after(grammarAccess.getQueryObjectRule()); } 
	 EOF 
;

// Rule QueryObject
ruleQueryObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryObjectAccess().getGroup()); }
(rule__QueryObject__Group__0)
{ after(grammarAccess.getQueryObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMember
entryRuleMember 
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberAccess().getGroup()); }
(rule__Member__Group__0)
{ after(grammarAccess.getMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKey
entryRuleKey 
:
{ before(grammarAccess.getKeyRule()); }
	 ruleKey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule Key
ruleKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyAccess().getAlternatives()); }
(rule__Key__Alternatives)
{ after(grammarAccess.getKeyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditional
entryRuleConditional 
:
{ before(grammarAccess.getConditionalRule()); }
	 ruleConditional
{ after(grammarAccess.getConditionalRule()); } 
	 EOF 
;

// Rule Conditional
ruleConditional
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalAccess().getAlternatives()); }
(rule__Conditional__Alternatives)
{ after(grammarAccess.getConditionalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolean
entryRuleBoolean 
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanAccess().getAlternatives()); }
(rule__Boolean__Alternatives)
{ after(grammarAccess.getBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNull
entryRuleNull 
:
{ before(grammarAccess.getNullRule()); }
	 ruleNull
{ after(grammarAccess.getNullRule()); } 
	 EOF 
;

// Rule Null
ruleNull
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullAccess().getNullKeyword()); }

	'null' 

{ after(grammarAccess.getNullAccess().getNullKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJsonDate
entryRuleJsonDate 
:
{ before(grammarAccess.getJsonDateRule()); }
	 ruleJsonDate
{ after(grammarAccess.getJsonDateRule()); } 
	 EOF 
;

// Rule JsonDate
ruleJsonDate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJsonDateAccess().getAlternatives()); }
(rule__JsonDate__Alternatives)
{ after(grammarAccess.getJsonDateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateNow
entryRuleDateNow 
:
{ before(grammarAccess.getDateNowRule()); }
	 ruleDateNow
{ after(grammarAccess.getDateNowRule()); } 
	 EOF 
;

// Rule DateNow
ruleDateNow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateNowAccess().getGroup()); }
(rule__DateNow__Group__0)
{ after(grammarAccess.getDateNowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateMilli
entryRuleDateMilli 
:
{ before(grammarAccess.getDateMilliRule()); }
	 ruleDateMilli
{ after(grammarAccess.getDateMilliRule()); } 
	 EOF 
;

// Rule DateMilli
ruleDateMilli
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateMilliAccess().getGroup()); }
(rule__DateMilli__Group__0)
{ after(grammarAccess.getDateMilliAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateString
entryRuleDateString 
:
{ before(grammarAccess.getDateStringRule()); }
	 ruleDateString
{ after(grammarAccess.getDateStringRule()); } 
	 EOF 
;

// Rule DateString
ruleDateString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateStringAccess().getGroup()); }
(rule__DateString__Group__0)
{ after(grammarAccess.getDateStringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateFull
entryRuleDateFull 
:
{ before(grammarAccess.getDateFullRule()); }
	 ruleDateFull
{ after(grammarAccess.getDateFullRule()); } 
	 EOF 
;

// Rule DateFull
ruleDateFull
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateFullAccess().getGroup()); }
(rule__DateFull__Group__0)
{ after(grammarAccess.getDateFullAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStringValueAssignment_0()); }
(rule__Value__StringValueAssignment_0)
{ after(grammarAccess.getValueAccess().getStringValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getStringValueAssignment_1()); }
(rule__Value__StringValueAssignment_1)
{ after(grammarAccess.getValueAccess().getStringValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getStringValueAssignment_2()); }
(rule__Value__StringValueAssignment_2)
{ after(grammarAccess.getValueAccess().getStringValueAssignment_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getStringValueAssignment_3()); }
(rule__Value__StringValueAssignment_3)
{ after(grammarAccess.getValueAccess().getStringValueAssignment_3()); }
)

    |(
{ before(grammarAccess.getValueAccess().getNumberValueAssignment_4()); }
(rule__Value__NumberValueAssignment_4)
{ after(grammarAccess.getValueAccess().getNumberValueAssignment_4()); }
)

    |(
{ before(grammarAccess.getValueAccess().getDateValueAssignment_5()); }
(rule__Value__DateValueAssignment_5)
{ after(grammarAccess.getValueAccess().getDateValueAssignment_5()); }
)

    |(
{ before(grammarAccess.getValueAccess().getArrayValueAssignment_6()); }
(rule__Value__ArrayValueAssignment_6)
{ after(grammarAccess.getValueAccess().getArrayValueAssignment_6()); }
)

    |(
{ before(grammarAccess.getValueAccess().getIntegerValueAssignment_7()); }
(rule__Value__IntegerValueAssignment_7)
{ after(grammarAccess.getValueAccess().getIntegerValueAssignment_7()); }
)

    |(
{ before(grammarAccess.getValueAccess().getObjectValueAssignment_8()); }
(rule__Value__ObjectValueAssignment_8)
{ after(grammarAccess.getValueAccess().getObjectValueAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyAccess().getConditionalParserRuleCall_0()); }
	ruleConditional
{ after(grammarAccess.getKeyAccess().getConditionalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getKeyAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getKeyAccess().getIDTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getKeyAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getKeyAccess().getSTRINGTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getLtKeyword_0()); }

	'$lt' 

{ after(grammarAccess.getConditionalAccess().getLtKeyword_0()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getGtKeyword_1()); }

	'$gt' 

{ after(grammarAccess.getConditionalAccess().getGtKeyword_1()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getGteKeyword_2()); }

	'$gte' 

{ after(grammarAccess.getConditionalAccess().getGteKeyword_2()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getLteKeyword_3()); }

	'$lte' 

{ after(grammarAccess.getConditionalAccess().getLteKeyword_3()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getAllKeyword_4()); }

	'$all' 

{ after(grammarAccess.getConditionalAccess().getAllKeyword_4()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getExistsKeyword_5()); }

	'$exists' 

{ after(grammarAccess.getConditionalAccess().getExistsKeyword_5()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getModKeyword_6()); }

	'$mod' 

{ after(grammarAccess.getConditionalAccess().getModKeyword_6()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getNeKeyword_7()); }

	'$ne' 

{ after(grammarAccess.getConditionalAccess().getNeKeyword_7()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getInKeyword_8()); }

	'$in' 

{ after(grammarAccess.getConditionalAccess().getInKeyword_8()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getNinKeyword_9()); }

	'$nin' 

{ after(grammarAccess.getConditionalAccess().getNinKeyword_9()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getNotKeyword_10()); }

	'$not' 

{ after(grammarAccess.getConditionalAccess().getNotKeyword_10()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getOrKeyword_11()); }

	'$or' 

{ after(grammarAccess.getConditionalAccess().getOrKeyword_11()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getAndKeyword_12()); }

	'$and' 

{ after(grammarAccess.getConditionalAccess().getAndKeyword_12()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getSizeKeyword_13()); }

	'$size' 

{ after(grammarAccess.getConditionalAccess().getSizeKeyword_13()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getTypeKeyword_14()); }

	'$type' 

{ after(grammarAccess.getConditionalAccess().getTypeKeyword_14()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getNearKeyword_15()); }

	'$near' 

{ after(grammarAccess.getConditionalAccess().getNearKeyword_15()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getMaxDistanceKeyword_16()); }

	'$maxDistance' 

{ after(grammarAccess.getConditionalAccess().getMaxDistanceKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBooleanAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBooleanAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBooleanAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JsonDate__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJsonDateAccess().getDateNowParserRuleCall_0()); }
	ruleDateNow
{ after(grammarAccess.getJsonDateAccess().getDateNowParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJsonDateAccess().getDateMilliParserRuleCall_1()); }
	ruleDateMilli
{ after(grammarAccess.getJsonDateAccess().getDateMilliParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getJsonDateAccess().getDateStringParserRuleCall_2()); }
	ruleDateString
{ after(grammarAccess.getJsonDateAccess().getDateStringParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getJsonDateAccess().getDateFullParserRuleCall_3()); }
	ruleDateFull
{ after(grammarAccess.getJsonDateAccess().getDateFullParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Selector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getQueryAssignment_0()); }
(rule__Selector__QueryAssignment_0)
{ after(grammarAccess.getSelectorAccess().getQueryAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getGroup_1()); }
(rule__Selector__Group_1__0)?
{ after(grammarAccess.getSelectorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1__0__Impl
	rule__Selector__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getSelectorAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectionAssignment_1_1()); }
(rule__Selector__SelectionAssignment_1_1)
{ after(grammarAccess.getSelectorAccess().getSelectionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__0__Impl
	rule__Selection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getSelectionAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__1__Impl
	rule__Selection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getSelectionAction_1()); }
(

)
{ after(grammarAccess.getSelectionAccess().getSelectionAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__2__Impl
	rule__Selection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getFieldsAssignment_2()); }
(rule__Selection__FieldsAssignment_2)?
{ after(grammarAccess.getSelectionAccess().getFieldsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__3__Impl
	rule__Selection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getGroup_3()); }
(rule__Selection__Group_3__0)*
{ after(grammarAccess.getSelectionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSelectionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Selection__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group_3__0__Impl
	rule__Selection__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getSelectionAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getFieldsAssignment_3_1()); }
(rule__Selection__FieldsAssignment_3_1)
{ after(grammarAccess.getSelectionAccess().getFieldsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldSelection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSelection__Group__0__Impl
	rule__FieldSelection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSelectionAccess().getKeyAssignment_0()); }
(rule__FieldSelection__KeyAssignment_0)
{ after(grammarAccess.getFieldSelectionAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSelection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSelection__Group__1__Impl
	rule__FieldSelection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSelectionAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getFieldSelectionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSelection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSelection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSelectionAccess().getEnabledAssignment_2()); }
(rule__FieldSelection__EnabledAssignment_2)
{ after(grammarAccess.getFieldSelectionAccess().getEnabledAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QueryObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryObject__Group__0__Impl
	rule__QueryObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryObjectAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getQueryObjectAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryObject__Group__1__Impl
	rule__QueryObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryObjectAccess().getQueryObjectAction_1()); }
(

)
{ after(grammarAccess.getQueryObjectAccess().getQueryObjectAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryObject__Group__2__Impl
	rule__QueryObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryObjectAccess().getMembersAssignment_2()); }
(rule__QueryObject__MembersAssignment_2)?
{ after(grammarAccess.getQueryObjectAccess().getMembersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryObject__Group__3__Impl
	rule__QueryObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryObjectAccess().getGroup_3()); }
(rule__QueryObject__Group_3__0)*
{ after(grammarAccess.getQueryObjectAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryObject__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryObject__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryObject__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryObjectAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getQueryObjectAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__QueryObject__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryObject__Group_3__0__Impl
	rule__QueryObject__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryObject__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryObjectAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getQueryObjectAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryObject__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryObject__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryObject__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryObjectAccess().getMembersAssignment_3_1()); }
(rule__QueryObject__MembersAssignment_3_1)
{ after(grammarAccess.getQueryObjectAccess().getMembersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Member__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Member__Group__0__Impl
	rule__Member__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getKeyAssignment_0()); }
(rule__Member__KeyAssignment_0)
{ after(grammarAccess.getMemberAccess().getKeyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Member__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Member__Group__1__Impl
	rule__Member__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getMemberAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Member__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Member__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getValueAssignment_2()); }
(rule__Member__ValueAssignment_2)
{ after(grammarAccess.getMemberAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getArrayAction_0()); }
(

)
{ after(grammarAccess.getArrayAccess().getArrayAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__2__Impl
	rule__Array__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesAssignment_2()); }
(rule__Array__ValuesAssignment_2)?
{ after(grammarAccess.getArrayAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__3__Impl
	rule__Array__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getGroup_3()); }
(rule__Array__Group_3__0)*
{ after(grammarAccess.getArrayAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Array__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_3__0__Impl
	rule__Array__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getArrayAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesAssignment_3_1()); }
(rule__Array__ValuesAssignment_3_1)
{ after(grammarAccess.getArrayAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DateNow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateNow__Group__0__Impl
	rule__DateNow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateNow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateNowAccess().getJsonDateAction_0()); }
(

)
{ after(grammarAccess.getDateNowAccess().getJsonDateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateNow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateNow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateNow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateNowAccess().getNewDateKeyword_1()); }

	'new Date()' 

{ after(grammarAccess.getDateNowAccess().getNewDateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DateMilli__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateMilli__Group__0__Impl
	rule__DateMilli__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateMilli__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateMilliAccess().getNewDateKeyword_0()); }

	'new Date(' 

{ after(grammarAccess.getDateMilliAccess().getNewDateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateMilli__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateMilli__Group__1__Impl
	rule__DateMilli__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateMilli__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateMilliAccess().getMillisecondsAssignment_1()); }
(rule__DateMilli__MillisecondsAssignment_1)
{ after(grammarAccess.getDateMilliAccess().getMillisecondsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateMilli__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateMilli__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateMilli__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateMilliAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getDateMilliAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DateString__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateString__Group__0__Impl
	rule__DateString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateString__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateStringAccess().getNewDateKeyword_0()); }

	'new Date(' 

{ after(grammarAccess.getDateStringAccess().getNewDateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateString__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateString__Group__1__Impl
	rule__DateString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateString__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateStringAccess().getDateStringAssignment_1()); }
(rule__DateString__DateStringAssignment_1)
{ after(grammarAccess.getDateStringAccess().getDateStringAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateString__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateString__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateString__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateStringAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getDateStringAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DateFull__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group__0__Impl
	rule__DateFull__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getNewDateKeyword_0()); }

	'new Date(' 

{ after(grammarAccess.getDateFullAccess().getNewDateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group__1__Impl
	rule__DateFull__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getYearAssignment_1()); }
(rule__DateFull__YearAssignment_1)
{ after(grammarAccess.getDateFullAccess().getYearAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group__2__Impl
	rule__DateFull__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getDateFullAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group__3__Impl
	rule__DateFull__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getMonthAssignment_3()); }
(rule__DateFull__MonthAssignment_3)
{ after(grammarAccess.getDateFullAccess().getMonthAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group__4__Impl
	rule__DateFull__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getDateFullAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group__5__Impl
	rule__DateFull__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getDayAssignment_5()); }
(rule__DateFull__DayAssignment_5)
{ after(grammarAccess.getDateFullAccess().getDayAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group__6__Impl
	rule__DateFull__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getGroup_6()); }
(rule__DateFull__Group_6__0)?
{ after(grammarAccess.getDateFullAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getDateFullAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__DateFull__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group_6__0__Impl
	rule__DateFull__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getDateFullAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group_6__1__Impl
	rule__DateFull__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getHourAssignment_6_1()); }
(rule__DateFull__HourAssignment_6_1)
{ after(grammarAccess.getDateFullAccess().getHourAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group_6__2__Impl
	rule__DateFull__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getCommaKeyword_6_2()); }

	',' 

{ after(grammarAccess.getDateFullAccess().getCommaKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group_6__3__Impl
	rule__DateFull__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getMinuteAssignment_6_3()); }
(rule__DateFull__MinuteAssignment_6_3)
{ after(grammarAccess.getDateFullAccess().getMinuteAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group_6__4__Impl
	rule__DateFull__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getCommaKeyword_6_4()); }

	',' 

{ after(grammarAccess.getDateFullAccess().getCommaKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group_6__5__Impl
	rule__DateFull__Group_6__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getSecondAssignment_6_5()); }
(rule__DateFull__SecondAssignment_6_5)
{ after(grammarAccess.getDateFullAccess().getSecondAssignment_6_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group_6__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group_6__6__Impl
	rule__DateFull__Group_6__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group_6__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getCommaKeyword_6_6()); }

	',' 

{ after(grammarAccess.getDateFullAccess().getCommaKeyword_6_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DateFull__Group_6__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DateFull__Group_6__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__Group_6__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getMillisecondAssignment_6_7()); }
(rule__DateFull__MillisecondAssignment_6_7)
{ after(grammarAccess.getDateFullAccess().getMillisecondAssignment_6_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



















rule__Selector__QueryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getQueryQueryObjectParserRuleCall_0_0()); }
	ruleQueryObject{ after(grammarAccess.getSelectorAccess().getQueryQueryObjectParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SelectionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectionSelectionParserRuleCall_1_1_0()); }
	ruleSelection{ after(grammarAccess.getSelectorAccess().getSelectionSelectionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__FieldsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getFieldsFieldSelectionParserRuleCall_2_0()); }
	ruleFieldSelection{ after(grammarAccess.getSelectionAccess().getFieldsFieldSelectionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__FieldsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getFieldsFieldSelectionParserRuleCall_3_1_0()); }
	ruleFieldSelection{ after(grammarAccess.getSelectionAccess().getFieldsFieldSelectionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelection__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSelectionAccess().getKeySTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getFieldSelectionAccess().getKeySTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelection__EnabledAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSelectionAccess().getEnabledINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getFieldSelectionAccess().getEnabledINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryObject__MembersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryObjectAccess().getMembersMemberParserRuleCall_2_0()); }
	ruleMember{ after(grammarAccess.getQueryObjectAccess().getMembersMemberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QueryObject__MembersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryObjectAccess().getMembersMemberParserRuleCall_3_1_0()); }
	ruleMember{ after(grammarAccess.getQueryObjectAccess().getMembersMemberParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__KeyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getKeyKeyParserRuleCall_0_0()); }
	ruleKey{ after(grammarAccess.getMemberAccess().getKeyKeyParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getValueValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getMemberAccess().getValueValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStringValueNullParserRuleCall_0_0()); }
	ruleNull{ after(grammarAccess.getValueAccess().getStringValueNullParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStringValueBooleanParserRuleCall_1_0()); }
	ruleBoolean{ after(grammarAccess.getValueAccess().getStringValueBooleanParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStringValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getValueAccess().getStringValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStringValueIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getValueAccess().getStringValueIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NumberValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNumberValueNumberTerminalRuleCall_4_0()); }
	RULE_NUMBER{ after(grammarAccess.getValueAccess().getNumberValueNumberTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__DateValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getDateValueJsonDateParserRuleCall_5_0()); }
	ruleJsonDate{ after(grammarAccess.getValueAccess().getDateValueJsonDateParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ArrayValueAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getArrayValueArrayParserRuleCall_6_0()); }
	ruleArray{ after(grammarAccess.getValueAccess().getArrayValueArrayParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__IntegerValueAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getIntegerValueINTTerminalRuleCall_7_0()); }
	RULE_INT{ after(grammarAccess.getValueAccess().getIntegerValueINTTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ObjectValueAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getObjectValueQueryObjectParserRuleCall_8_0()); }
	ruleQueryObject{ after(grammarAccess.getValueAccess().getObjectValueQueryObjectParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_3_1_0()); }
	ruleValue{ after(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateMilli__MillisecondsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateMilliAccess().getMillisecondsINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getDateMilliAccess().getMillisecondsINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateString__DateStringAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateStringAccess().getDateStringSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDateStringAccess().getDateStringSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__YearAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getYearINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getDateFullAccess().getYearINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__MonthAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getMonthINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getDateFullAccess().getMonthINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__DayAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getDayINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getDateFullAccess().getDayINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__HourAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getHourINTTerminalRuleCall_6_1_0()); }
	RULE_INT{ after(grammarAccess.getDateFullAccess().getHourINTTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__MinuteAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getMinuteINTTerminalRuleCall_6_3_0()); }
	RULE_INT{ after(grammarAccess.getDateFullAccess().getMinuteINTTerminalRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__SecondAssignment_6_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getSecondINTTerminalRuleCall_6_5_0()); }
	RULE_INT{ after(grammarAccess.getDateFullAccess().getSecondINTTerminalRuleCall_6_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateFull__MillisecondAssignment_6_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateFullAccess().getMillisecondINTTerminalRuleCall_6_7_0()); }
	RULE_INT{ after(grammarAccess.getDateFullAccess().getMillisecondINTTerminalRuleCall_6_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NUMBER : '-'? RULE_INT? '.' RULE_INT (('E'|'e') '-'? RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


